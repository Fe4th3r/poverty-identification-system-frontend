{"ast":null,"code":"import axios from 'axios';\nimport StudentForm from './StudentForm.vue';\nexport default {\n  name: 'StudentList',\n  components: {\n    StudentForm\n  },\n  data() {\n    return {\n      students: [],\n      searchName: '',\n      showForm: false,\n      currentStudent: null\n    };\n  },\n  mounted() {\n    this.fetchStudents();\n  },\n  methods: {\n    async fetchStudents() {\n      try {\n        const response = await axios.get('/api/student');\n        this.students = response.data;\n      } catch (error) {\n        console.error('获取学生信息失败:', error);\n      }\n    },\n    async searchStudents() {\n      try {\n        const response = await axios.get('/api/student/search', {\n          params: {\n            name: this.searchName\n          }\n        });\n        this.students = response.data;\n      } catch (error) {\n        console.error('搜索学生信息失败:', error);\n      }\n    },\n    showAddForm() {\n      this.currentStudent = null;\n      this.showForm = true;\n    },\n    showEditForm(student) {\n      this.currentStudent = {\n        ...student\n      }; // 复制一份，避免直接修改原数据\n      this.showForm = true;\n    },\n    async deleteStudent(id) {\n      if (confirm('确定要删除该学生信息吗？')) {\n        try {\n          await axios.delete(`/api/student/${id}`);\n          this.fetchStudents(); // 删除后重新加载列表\n        } catch (error) {\n          console.error('删除学生信息失败:', error);\n        }\n      }\n    },\n    handleSave(studentData) {\n      if (studentData.id) {\n        // 编辑\n        this.updateStudent(studentData);\n      } else {\n        // 添加\n        this.addStudent(studentData);\n      }\n    },\n    async addStudent(studentData) {\n      try {\n        const response = await axios.post('/api/student', studentData);\n        if (response.status === 200) {\n          this.fetchStudents(); // 添加后重新加载列表\n          this.resetForm();\n        } else {\n          alert(response.data.message); // 显示错误信息\n        }\n      } catch (error) {\n        console.error('添加学生信息失败:', error);\n        alert('添加失败');\n      }\n    },\n    async updateStudent(studentData) {\n      try {\n        const response = await axios.put(`/api/student/${studentData.id}`, studentData);\n        if (response.status === 200) {\n          this.fetchStudents(); // 更新后重新加载列表\n          this.resetForm();\n        } else {\n          alert(response.data.message);\n        }\n      } catch (error) {\n        console.error('更新学生信息失败:', error);\n        alert('更新失败');\n      }\n    },\n    resetForm() {\n      this.showForm = false;\n      this.currentStudent = null;\n    }\n  }\n};","map":{"version":3,"names":["axios","StudentForm","name","components","data","students","searchName","showForm","currentStudent","mounted","fetchStudents","methods","response","get","error","console","searchStudents","params","showAddForm","showEditForm","student","deleteStudent","id","confirm","delete","handleSave","studentData","updateStudent","addStudent","post","status","resetForm","alert","message","put"],"sources":["C:\\Users\\Administrator\\poverty-identification-system-frontend\\src\\components\\student\\StudentList.vue"],"sourcesContent":["<template>\r\n    <div>\r\n      <h2>学生信息列表</h2>\r\n      <button @click=\"showAddForm\">添加学生</button>\r\n      <br/>\r\n      <input type=\"text\" v-model=\"searchName\" placeholder=\"输入姓名搜索\" />\r\n      <button @click=\"searchStudents\">搜索</button>\r\n  \r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>ID</th>\r\n            <th>学号</th>\r\n            <th>姓名</th>\r\n            <th>性别</th>\r\n            <th>身份证号</th>\r\n            <th>专业</th>\r\n            <th>操作</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr v-for=\"student in students\" :key=\"student.id\">\r\n            <td>{{ student.id }}</td>\r\n            <td>{{ student.stuId }}</td>\r\n            <td>{{ student.name }}</td>\r\n            <td>{{ student.gender }}</td>\r\n            <td>{{ student.idCard }}</td>\r\n            <td>{{ student.major }}</td>\r\n            <td>\r\n              <button @click=\"showEditForm(student)\">编辑</button>\r\n              <button @click=\"deleteStudent(student.id)\">删除</button>\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n  \r\n      <div v-if=\"showForm\">\r\n        <!-- 使用 StudentForm 组件 -->\r\n        <StudentForm :student=\"currentStudent\" @save=\"handleSave\" @cancel=\"resetForm\" />\r\n      </div>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import axios from 'axios';\r\n  import StudentForm from './StudentForm.vue';\r\n  \r\n  export default {\r\n    name: 'StudentList',\r\n    components: {\r\n      StudentForm,\r\n    },\r\n    data() {\r\n      return {\r\n        students: [],\r\n        searchName: '',\r\n        showForm: false,\r\n        currentStudent: null,\r\n      };\r\n    },\r\n    mounted() {\r\n      this.fetchStudents();\r\n    },\r\n    methods: {\r\n      async fetchStudents() {\r\n        try {\r\n          const response = await axios.get('/api/student');\r\n          this.students = response.data;\r\n        } catch (error) {\r\n          console.error('获取学生信息失败:', error);\r\n        }\r\n      },\r\n      async searchStudents() {\r\n        try {\r\n          const response = await axios.get('/api/student/search', {\r\n            params: {\r\n              name: this.searchName,\r\n            },\r\n          });\r\n          this.students = response.data;\r\n        } catch (error) {\r\n          console.error('搜索学生信息失败:', error);\r\n        }\r\n      },\r\n      showAddForm() {\r\n        this.currentStudent = null;\r\n        this.showForm = true;\r\n      },\r\n      showEditForm(student) {\r\n        this.currentStudent = { ...student }; // 复制一份，避免直接修改原数据\r\n        this.showForm = true;\r\n      },\r\n      async deleteStudent(id) {\r\n        if (confirm('确定要删除该学生信息吗？')) {\r\n          try {\r\n            await axios.delete(`/api/student/${id}`);\r\n            this.fetchStudents(); // 删除后重新加载列表\r\n          } catch (error) {\r\n            console.error('删除学生信息失败:', error);\r\n          }\r\n        }\r\n      },\r\n      handleSave(studentData) {\r\n        if (studentData.id) {\r\n          // 编辑\r\n          this.updateStudent(studentData);\r\n        } else {\r\n          // 添加\r\n          this.addStudent(studentData);\r\n        }\r\n      },\r\n      async addStudent(studentData) {\r\n        try {\r\n          const response = await axios.post('/api/student', studentData);\r\n          if (response.status === 200) {\r\n            this.fetchStudents(); // 添加后重新加载列表\r\n            this.resetForm();\r\n          } else {\r\n            alert(response.data.message); // 显示错误信息\r\n          }\r\n        } catch (error) {\r\n          console.error('添加学生信息失败:', error);\r\n          alert('添加失败');\r\n        }\r\n      },\r\n      async updateStudent(studentData) {\r\n        try {\r\n          const response = await axios.put(`/api/student/${studentData.id}`, studentData);\r\n          if (response.status === 200) {\r\n            this.fetchStudents(); // 更新后重新加载列表\r\n            this.resetForm();\r\n          } else {\r\n            alert(response.data.message);\r\n          }\r\n        } catch (error) {\r\n          console.error('更新学生信息失败:', error);\r\n          alert('更新失败');\r\n        }\r\n      },\r\n      resetForm() {\r\n        this.showForm = false;\r\n        this.currentStudent = null;\r\n      },\r\n    },\r\n  };\r\n  </script>\r\n  \r\n  <style scoped>\r\n  table {\r\n    border-collapse: collapse;\r\n    width: 100%;\r\n  }\r\n  \r\n  th, td {\r\n    border: 1px solid black;\r\n    padding: 8px;\r\n    text-align: left;\r\n  }\r\n  </style>"],"mappings":"AA4CE,OAAOA,KAAI,MAAO,OAAO;AACzB,OAAOC,WAAU,MAAO,mBAAmB;AAE3C,eAAe;EACbC,IAAI,EAAE,aAAa;EACnBC,UAAU,EAAE;IACVF;EACF,CAAC;EACDG,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,QAAQ,EAAE,EAAE;MACZC,UAAU,EAAE,EAAE;MACdC,QAAQ,EAAE,KAAK;MACfC,cAAc,EAAE;IAClB,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,aAAa,CAAC,CAAC;EACtB,CAAC;EACDC,OAAO,EAAE;IACP,MAAMD,aAAaA,CAAA,EAAG;MACpB,IAAI;QACF,MAAME,QAAO,GAAI,MAAMZ,KAAK,CAACa,GAAG,CAAC,cAAc,CAAC;QAChD,IAAI,CAACR,QAAO,GAAIO,QAAQ,CAACR,IAAI;MAC/B,EAAE,OAAOU,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,WAAW,EAAEA,KAAK,CAAC;MACnC;IACF,CAAC;IACD,MAAME,cAAcA,CAAA,EAAG;MACrB,IAAI;QACF,MAAMJ,QAAO,GAAI,MAAMZ,KAAK,CAACa,GAAG,CAAC,qBAAqB,EAAE;UACtDI,MAAM,EAAE;YACNf,IAAI,EAAE,IAAI,CAACI;UACb;QACF,CAAC,CAAC;QACF,IAAI,CAACD,QAAO,GAAIO,QAAQ,CAACR,IAAI;MAC/B,EAAE,OAAOU,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,WAAW,EAAEA,KAAK,CAAC;MACnC;IACF,CAAC;IACDI,WAAWA,CAAA,EAAG;MACZ,IAAI,CAACV,cAAa,GAAI,IAAI;MAC1B,IAAI,CAACD,QAAO,GAAI,IAAI;IACtB,CAAC;IACDY,YAAYA,CAACC,OAAO,EAAE;MACpB,IAAI,CAACZ,cAAa,GAAI;QAAE,GAAGY;MAAQ,CAAC,EAAE;MACtC,IAAI,CAACb,QAAO,GAAI,IAAI;IACtB,CAAC;IACD,MAAMc,aAAaA,CAACC,EAAE,EAAE;MACtB,IAAIC,OAAO,CAAC,cAAc,CAAC,EAAE;QAC3B,IAAI;UACF,MAAMvB,KAAK,CAACwB,MAAM,CAAC,gBAAgBF,EAAE,EAAE,CAAC;UACxC,IAAI,CAACZ,aAAa,CAAC,CAAC,EAAE;QACxB,EAAE,OAAOI,KAAK,EAAE;UACdC,OAAO,CAACD,KAAK,CAAC,WAAW,EAAEA,KAAK,CAAC;QACnC;MACF;IACF,CAAC;IACDW,UAAUA,CAACC,WAAW,EAAE;MACtB,IAAIA,WAAW,CAACJ,EAAE,EAAE;QAClB;QACA,IAAI,CAACK,aAAa,CAACD,WAAW,CAAC;MACjC,OAAO;QACL;QACA,IAAI,CAACE,UAAU,CAACF,WAAW,CAAC;MAC9B;IACF,CAAC;IACD,MAAME,UAAUA,CAACF,WAAW,EAAE;MAC5B,IAAI;QACF,MAAMd,QAAO,GAAI,MAAMZ,KAAK,CAAC6B,IAAI,CAAC,cAAc,EAAEH,WAAW,CAAC;QAC9D,IAAId,QAAQ,CAACkB,MAAK,KAAM,GAAG,EAAE;UAC3B,IAAI,CAACpB,aAAa,CAAC,CAAC,EAAE;UACtB,IAAI,CAACqB,SAAS,CAAC,CAAC;QAClB,OAAO;UACLC,KAAK,CAACpB,QAAQ,CAACR,IAAI,CAAC6B,OAAO,CAAC,EAAE;QAChC;MACF,EAAE,OAAOnB,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,WAAW,EAAEA,KAAK,CAAC;QACjCkB,KAAK,CAAC,MAAM,CAAC;MACf;IACF,CAAC;IACD,MAAML,aAAaA,CAACD,WAAW,EAAE;MAC/B,IAAI;QACF,MAAMd,QAAO,GAAI,MAAMZ,KAAK,CAACkC,GAAG,CAAC,gBAAgBR,WAAW,CAACJ,EAAE,EAAE,EAAEI,WAAW,CAAC;QAC/E,IAAId,QAAQ,CAACkB,MAAK,KAAM,GAAG,EAAE;UAC3B,IAAI,CAACpB,aAAa,CAAC,CAAC,EAAE;UACtB,IAAI,CAACqB,SAAS,CAAC,CAAC;QAClB,OAAO;UACLC,KAAK,CAACpB,QAAQ,CAACR,IAAI,CAAC6B,OAAO,CAAC;QAC9B;MACF,EAAE,OAAOnB,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,WAAW,EAAEA,KAAK,CAAC;QACjCkB,KAAK,CAAC,MAAM,CAAC;MACf;IACF,CAAC;IACDD,SAASA,CAAA,EAAG;MACV,IAAI,CAACxB,QAAO,GAAI,KAAK;MACrB,IAAI,CAACC,cAAa,GAAI,IAAI;IAC5B;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}