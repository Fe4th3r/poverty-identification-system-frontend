{"ast":null,"code":"import \"core-js/modules/web.url-search-params.delete.js\";\nimport \"core-js/modules/web.url-search-params.has.js\";\nimport \"core-js/modules/web.url-search-params.size.js\";\nimport axios from 'axios';\nimport StudentForm from './StudentForm.vue';\nimport FamilyInfoForm from '../family/FamilyInfoForm.vue';\nimport SpecialGroupList from '../specialGroup/SpecialGroupList.vue';\nimport EmergencyList from '../emergency/EmergencyList.vue';\nimport WorkStudyList from '../workStudy/WorkStudyList.vue';\nexport default {\n  name: 'StudentList',\n  components: {\n    StudentForm,\n    FamilyInfoForm,\n    SpecialGroupList,\n    EmergencyList,\n    WorkStudyList\n  },\n  data() {\n    return {\n      students: [],\n      searchName: '',\n      showForm: false,\n      showFamilyForm: false,\n      showSpecialGroup: false,\n      showEmergency: false,\n      showWorkStudy: false,\n      currentStudent: null,\n      currentStudentId: null,\n      currentFamilyInfo: null,\n      isPrinting: false\n    };\n  },\n  methods: {\n    async fetchStudents() {\n      try {\n        const response = await axios.get('http://localhost:8080/student');\n        this.students = response.data;\n      } catch (error) {\n        console.error('获取学生信息失败:', error);\n      }\n    },\n    async searchStudents() {\n      try {\n        const response = await axios.get('http://localhost:8080/student/search', {\n          params: {\n            name: this.searchName\n          }\n        });\n        this.students = response.data;\n      } catch (error) {\n        console.error('搜索学生信息失败:', error);\n      }\n    },\n    showAddForm() {\n      this.currentStudent = null;\n      this.showForm = true;\n    },\n    showEditForm(student) {\n      this.currentStudent = {\n        ...student\n      }; // 复制一份，避免直接修改原数据\n      this.showForm = true;\n    },\n    async deleteStudent(id) {\n      if (confirm('确定要删除该学生信息吗？')) {\n        try {\n          await axios.delete(`http://localhost:8080/student/${id}`);\n          this.fetchStudents(); // 删除后重新加载列表\n        } catch (error) {\n          console.error('删除学生信息失败:', error);\n        }\n      }\n    },\n    handleSave(studentData) {\n      if (studentData.id) {\n        // 编辑\n        this.updateStudent(studentData);\n      } else {\n        // 添加\n        this.addStudent(studentData);\n      }\n    },\n    async addStudent(studentData) {\n      try {\n        const response = await axios.post('http://localhost:8080/student', studentData);\n        if (response.status === 200) {\n          this.fetchStudents(); // 添加后重新加载列表\n          this.resetForm();\n        } else {\n          alert(response.data.message); // 显示错误信息\n        }\n      } catch (error) {\n        console.error('添加学生信息失败:', error);\n        alert('添加失败');\n      }\n    },\n    async updateStudent(studentData) {\n      try {\n        const response = await axios.put(`http://localhost:8080/student/${studentData.id}`, studentData);\n        if (response.status === 200) {\n          this.fetchStudents(); // 更新后重新加载列表\n          this.resetForm();\n        } else {\n          alert(response.data.message);\n        }\n      } catch (error) {\n        console.error('更新学生信息失败:', error);\n        alert('更新失败');\n      }\n    },\n    resetForm() {\n      this.showForm = false;\n      this.currentStudent = null;\n    },\n    hasFamilyInfo(student) {\n      return student.familyInfo !== null;\n    },\n    showAddFamilyInfoForm(studentId) {\n      this.currentStudentId = studentId;\n      this.currentFamilyInfo = null;\n      this.showFamilyForm = true;\n    },\n    async showEditFamilyInfoForm(student) {\n      this.currentStudentId = student.id;\n      // 获取家庭信息\n      try {\n        const response = await axios.get(`http://localhost:8080/family-info/${student.id}`);\n        this.currentFamilyInfo = response.data;\n      } catch (error) {\n        console.error(\"获取家庭信息失败:\", error);\n        this.currentFamilyInfo = null; // 获取失败也要重置\n      }\n      this.showFamilyForm = true;\n    },\n    async deleteFamilyInfo(studentId) {\n      if (confirm('确定要删除该学生的家庭信息吗？')) {\n        try {\n          await axios.delete(`http://localhost:8080/family-info/${studentId}`);\n          this.fetchStudents(); // 重新加载学生列表\n        } catch (error) {\n          console.error('删除家庭信息失败:', error);\n        }\n      }\n    },\n    async handleFamilyInfoSave({\n      studentId,\n      familyInfo\n    }) {\n      if (this.currentFamilyInfo && this.currentFamilyInfo.id) {\n        // 编辑\n        try {\n          const response = await axios.put(`http://localhost:8080/family-info/${studentId}`, familyInfo);\n          if (response.status === 200) {\n            this.fetchStudents(); // 重新加载学生列表\n            this.resetFamilyForm();\n          } else {\n            alert(response.data.message);\n          }\n        } catch (error) {\n          console.error('更新家庭信息失败:', error);\n          alert('更新失败');\n        }\n      } else {\n        // 添加\n        try {\n          const response = await axios.post(`http://localhost:8080/family-info/${studentId}`, familyInfo);\n          if (response.status === 200) {\n            this.fetchStudents(); // 重新加载学生列表\n            this.resetFamilyForm();\n          } else {\n            alert(response.data.message);\n          }\n        } catch (error) {\n          console.error('添加家庭信息失败:', error);\n          alert('添加失败');\n        }\n      }\n    },\n    resetFamilyForm() {\n      this.showFamilyForm = false;\n      this.currentStudentId = null;\n      this.currentFamilyInfo = null;\n    },\n    showSpecialGroupList(studentId) {\n      this.currentStudentId = studentId;\n      this.showSpecialGroup = true;\n    },\n    async deleteSpecialGroup(id) {\n      if (confirm('确定要删除该学生的特殊群体信息吗？')) {\n        try {\n          await axios.delete(`/special-group/${id}`);\n          this.fetchStudents(); // 重新加载学生列表\n        } catch (error) {\n          console.error('删除特殊群体信息失败:', error);\n        }\n      }\n    },\n    resetSpecialGroupList() {\n      this.showSpecialGroup = false;\n      this.currentStudentId = null;\n    },\n    showEmergencyList(studentId) {\n      this.currentStudentId = studentId;\n      this.showEmergency = true;\n    },\n    resetEmergencyList() {\n      this.showEmergency = false;\n      this.currentStudentId = null;\n    },\n    showWorkStudyList(studentId) {\n      this.currentStudentId = studentId;\n      this.showWorkStudy = true;\n    },\n    resetWorkStudyList() {\n      this.showWorkStudy = false;\n      this.currentStudentId = null;\n    },\n    printStudentList() {\n      this.isPrinting = true;\n      this.$nextTick(() => {\n        window.print();\n        this.isPrinting = false; // 打印完成后重置\n      });\n    },\n    async exportStudentData() {\n      try {\n        const response = await axios.get('http://localhost:8080/student/export', {\n          responseType: 'blob' // 重要：指定响应类型为 blob\n        });\n\n        // 从响应头中获取文件名 (后端需要设置 Content-Disposition 头)\n        const disposition = response.headers['content-disposition'];\n        let filename = 'student_data.xlsx'; // 默认文件名\n        if (disposition) {\n          const filenameRegex = /filename[^;=\\n]*=((['\"]).*?\\2|[^;\\n]*)/;\n          const matches = filenameRegex.exec(disposition);\n          if (matches != null && matches[1]) {\n            filename = matches[1].replace(/['\"]/g, '');\n          }\n        }\n\n        // 创建一个 Blob URL 并触发下载\n        const url = window.URL.createObjectURL(new Blob([response.data]));\n        const link = document.createElement('a');\n        link.href = url;\n        link.setAttribute('download', filename);\n        document.body.appendChild(link);\n        link.click();\n        document.body.removeChild(link);\n        window.URL.revokeObjectURL(url);\n      } catch (error) {\n        console.error('导出学生数据失败:', error);\n        alert('导出学生数据失败');\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","StudentForm","FamilyInfoForm","SpecialGroupList","EmergencyList","WorkStudyList","name","components","data","students","searchName","showForm","showFamilyForm","showSpecialGroup","showEmergency","showWorkStudy","currentStudent","currentStudentId","currentFamilyInfo","isPrinting","methods","fetchStudents","response","get","error","console","searchStudents","params","showAddForm","showEditForm","student","deleteStudent","id","confirm","delete","handleSave","studentData","updateStudent","addStudent","post","status","resetForm","alert","message","put","hasFamilyInfo","familyInfo","showAddFamilyInfoForm","studentId","showEditFamilyInfoForm","deleteFamilyInfo","handleFamilyInfoSave","resetFamilyForm","showSpecialGroupList","deleteSpecialGroup","resetSpecialGroupList","showEmergencyList","resetEmergencyList","showWorkStudyList","resetWorkStudyList","printStudentList","$nextTick","window","print","exportStudentData","responseType","disposition","headers","filename","filenameRegex","matches","exec","replace","url","URL","createObjectURL","Blob","link","document","createElement","href","setAttribute","body","appendChild","click","removeChild","revokeObjectURL"],"sources":["C:\\Users\\Administrator\\poverty-identification-system-frontend\\src\\components\\student\\StudentList.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <nav v-show=\"!isPrinting\">\r\n      <router-link to=\"/\">首页</router-link> |\r\n      <router-link to=\"/login\">登录</router-link> |\r\n      <router-link to=\"/register\">注册</router-link> |\r\n      <router-link to=\"/student\">学生信息管理</router-link> |\r\n      <router-link to=\"/data-cleaning\">数据清洗</router-link> |\r\n      <router-link to=\"/poverty-identification\">贫困生甄别</router-link>\r\n    </nav>\r\n\r\n    <div v-show=\"!isPrinting\">\r\n      <button @click=\"fetchStudents\">加载学生数据</button>\r\n      <button @click=\"showAddForm\">添加学生</button>\r\n      <button @click=\"printStudentList\">打印学生列表</button>\r\n      <button @click=\"exportStudentData\">导出学生数据</button>\r\n      <br />\r\n      <input type=\"text\" v-model=\"searchName\" placeholder=\"输入姓名搜索\" />\r\n      <button @click=\"searchStudents\">搜索</button>\r\n    </div>\r\n\r\n    <div id=\"printArea\" v-if=\"isPrinting\">\r\n       <h2 class=\"print-title\">学生信息列表</h2>\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>ID</th>\r\n            <th>学号</th>\r\n            <th>姓名</th>\r\n            <th>性别</th>\r\n            <th>身份证号</th>\r\n            <th>专业</th>\r\n            <th>贫困等级</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr v-for=\"student in students\" :key=\"student.id\">\r\n            <td>{{ student.id }}</td>\r\n            <td>{{ student.stuId }}</td>\r\n            <td>{{ student.name }}</td>\r\n            <td>{{ student.gender }}</td>\r\n            <td>{{ student.idCard }}</td>\r\n            <td>{{ student.major }}</td>\r\n            <td>{{ student.povertyLevel ? student.povertyLevel : '未评定' }}</td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n    <div v-else>\r\n       <h2 class=\"list-title\">学生信息列表</h2>\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>ID</th>\r\n            <th>学号</th>\r\n            <th>姓名</th>\r\n            <th>性别</th>\r\n            <th>身份证号</th>\r\n            <th>专业</th>\r\n            <th>贫困等级</th>\r\n            <th>操作</th>\r\n            <th>家庭信息操作</th>\r\n            <th>特殊群体操作</th>\r\n            <th>突发状况操作</th>\r\n            <th>勤工助学操作</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr v-for=\"student in students\" :key=\"student.id\">\r\n            <td>{{ student.id }}</td>\r\n            <td>{{ student.stuId }}</td>\r\n            <td>{{ student.name }}</td>\r\n            <td>{{ student.gender }}</td>\r\n            <td>{{ student.idCard }}</td>\r\n            <td>{{ student.major }}</td>\r\n            <td>{{ student.povertyLevel ? student.povertyLevel : '未评定' }}</td>\r\n            <td>\r\n              <button @click=\"showEditForm(student)\">编辑</button>\r\n              <button @click=\"deleteStudent(student.id)\">删除</button>\r\n            </td>\r\n            <td>\r\n              <button v-if=\"!hasFamilyInfo(student)\" @click=\"showAddFamilyInfoForm(student.id)\">添加家庭信息</button>\r\n              <button v-else @click=\"showEditFamilyInfoForm(student)\">编辑家庭信息</button>\r\n              <button v-if=\"hasFamilyInfo(student)\" @click=\"deleteFamilyInfo(student.id)\">删除家庭信息</button>\r\n            </td>\r\n            <td>\r\n              <button @click=\"showSpecialGroupList(student.id)\">查看</button>\r\n            </td>\r\n            <td>\r\n              <button @click=\"showEmergencyList(student.id)\">查看</button>\r\n            </td>\r\n            <td>\r\n              <button @click=\"showWorkStudyList(student.id)\">查看</button>\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n\r\n    <div v-if=\"showForm && !isPrinting\">\r\n      <StudentForm :student=\"currentStudent\" @save=\"handleSave\" @cancel=\"resetForm\" />\r\n    </div>\r\n    <div v-if=\"showFamilyForm && !isPrinting\">\r\n      <FamilyInfoForm :studentId=\"currentStudentId\" :familyInfo=\"currentFamilyInfo\" @save=\"handleFamilyInfoSave\"\r\n        @cancel=\"resetFamilyForm\" />\r\n    </div>\r\n    <div v-if=\"showSpecialGroup && !isPrinting\">\r\n      <SpecialGroupList :studentId=\"currentStudentId\" />\r\n    </div>\r\n    <div v-if=\"showEmergency && !isPrinting\">\r\n      <EmergencyList :studentId=\"currentStudentId\" />\r\n    </div>\r\n    <div v-if=\"showWorkStudy && !isPrinting\">\r\n      <WorkStudyList :studentId=\"currentStudentId\" />\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\nimport StudentForm from './StudentForm.vue';\r\nimport FamilyInfoForm from '../family/FamilyInfoForm.vue';\r\nimport SpecialGroupList from '../specialGroup/SpecialGroupList.vue';\r\nimport EmergencyList from '../emergency/EmergencyList.vue';\r\nimport WorkStudyList from '../workStudy/WorkStudyList.vue';\r\n\r\nexport default {\r\n  name: 'StudentList',\r\n  components: {\r\n    StudentForm,\r\n    FamilyInfoForm,\r\n    SpecialGroupList,\r\n    EmergencyList,\r\n    WorkStudyList\r\n  },\r\n  data() {\r\n    return {\r\n      students: [],\r\n      searchName: '',\r\n      showForm: false,\r\n      showFamilyForm: false,\r\n      showSpecialGroup: false,\r\n      showEmergency: false,\r\n      showWorkStudy: false,\r\n      currentStudent: null,\r\n      currentStudentId: null,\r\n      currentFamilyInfo: null,\r\n      isPrinting: false,\r\n    };\r\n  },\r\n\r\n  methods: {\r\n    async fetchStudents() {\r\n      try {\r\n        const response = await axios.get('http://localhost:8080/student');\r\n        this.students = response.data;\r\n      } catch (error) {\r\n        console.error('获取学生信息失败:', error);\r\n      }\r\n    },\r\n    async searchStudents() {\r\n      try {\r\n        const response = await axios.get('http://localhost:8080/student/search', {\r\n          params: {\r\n            name: this.searchName,\r\n          },\r\n        });\r\n        this.students = response.data;\r\n      } catch (error) {\r\n        console.error('搜索学生信息失败:', error);\r\n      }\r\n    },\r\n    showAddForm() {\r\n      this.currentStudent = null;\r\n      this.showForm = true;\r\n    },\r\n    showEditForm(student) {\r\n      this.currentStudent = { ...student }; // 复制一份，避免直接修改原数据\r\n      this.showForm = true;\r\n    },\r\n    async deleteStudent(id) {\r\n      if (confirm('确定要删除该学生信息吗？')) {\r\n        try {\r\n          await axios.delete(`http://localhost:8080/student/${id}`);\r\n          this.fetchStudents(); // 删除后重新加载列表\r\n        } catch (error) {\r\n          console.error('删除学生信息失败:', error);\r\n        }\r\n      }\r\n    },\r\n    handleSave(studentData) {\r\n      if (studentData.id) {\r\n        // 编辑\r\n        this.updateStudent(studentData);\r\n      } else {\r\n        // 添加\r\n        this.addStudent(studentData);\r\n      }\r\n    },\r\n    async addStudent(studentData) {\r\n      try {\r\n        const response = await axios.post('http://localhost:8080/student', studentData);\r\n        if (response.status === 200) {\r\n          this.fetchStudents(); // 添加后重新加载列表\r\n          this.resetForm();\r\n        } else {\r\n          alert(response.data.message); // 显示错误信息\r\n        }\r\n      } catch (error) {\r\n        console.error('添加学生信息失败:', error);\r\n        alert('添加失败');\r\n      }\r\n    },\r\n    async updateStudent(studentData) {\r\n      try {\r\n        const response = await axios.put(`http://localhost:8080/student/${studentData.id}`, studentData);\r\n        if (response.status === 200) {\r\n          this.fetchStudents(); // 更新后重新加载列表\r\n          this.resetForm();\r\n        } else {\r\n          alert(response.data.message);\r\n        }\r\n      } catch (error) {\r\n        console.error('更新学生信息失败:', error);\r\n        alert('更新失败');\r\n      }\r\n    },\r\n    resetForm() {\r\n      this.showForm = false;\r\n      this.currentStudent = null;\r\n    },\r\n    hasFamilyInfo(student) {\r\n      return student.familyInfo !== null;\r\n    },\r\n    showAddFamilyInfoForm(studentId) {\r\n      this.currentStudentId = studentId;\r\n      this.currentFamilyInfo = null;\r\n      this.showFamilyForm = true;\r\n    },\r\n    async showEditFamilyInfoForm(student) {\r\n      this.currentStudentId = student.id;\r\n      // 获取家庭信息\r\n      try {\r\n        const response = await axios.get(`http://localhost:8080/family-info/${student.id}`);\r\n        this.currentFamilyInfo = response.data;\r\n      } catch (error) {\r\n        console.error(\"获取家庭信息失败:\", error);\r\n        this.currentFamilyInfo = null; // 获取失败也要重置\r\n      }\r\n      this.showFamilyForm = true;\r\n    },\r\n    async deleteFamilyInfo(studentId) {\r\n      if (confirm('确定要删除该学生的家庭信息吗？')) {\r\n        try {\r\n          await axios.delete(`http://localhost:8080/family-info/${studentId}`);\r\n          this.fetchStudents(); // 重新加载学生列表\r\n        } catch (error) {\r\n          console.error('删除家庭信息失败:', error);\r\n        }\r\n      }\r\n    },\r\n    async handleFamilyInfoSave({ studentId, familyInfo }) {\r\n      if (this.currentFamilyInfo && this.currentFamilyInfo.id) {\r\n        // 编辑\r\n        try {\r\n          const response = await axios.put(`http://localhost:8080/family-info/${studentId}`, familyInfo);\r\n          if (response.status === 200) {\r\n            this.fetchStudents(); // 重新加载学生列表\r\n            this.resetFamilyForm();\r\n          } else {\r\n            alert(response.data.message);\r\n          }\r\n        } catch (error) {\r\n          console.error('更新家庭信息失败:', error);\r\n          alert('更新失败');\r\n        }\r\n      } else {\r\n        // 添加\r\n        try {\r\n          const response = await axios.post(`http://localhost:8080/family-info/${studentId}`, familyInfo);\r\n          if (response.status === 200) {\r\n            this.fetchStudents(); // 重新加载学生列表\r\n            this.resetFamilyForm();\r\n          } else {\r\n            alert(response.data.message);\r\n          }\r\n        } catch (error) {\r\n          console.error('添加家庭信息失败:', error);\r\n          alert('添加失败');\r\n        }\r\n      }\r\n    },\r\n    resetFamilyForm() {\r\n      this.showFamilyForm = false;\r\n      this.currentStudentId = null;\r\n      this.currentFamilyInfo = null;\r\n    },\r\n    showSpecialGroupList(studentId) {\r\n      this.currentStudentId = studentId;\r\n      this.showSpecialGroup = true;\r\n    },\r\n    async deleteSpecialGroup(id) {\r\n      if (confirm('确定要删除该学生的特殊群体信息吗？')) {\r\n        try {\r\n          await axios.delete(`/special-group/${id}`);\r\n          this.fetchStudents(); // 重新加载学生列表\r\n        } catch (error) {\r\n          console.error('删除特殊群体信息失败:', error);\r\n        }\r\n      }\r\n    },\r\n    resetSpecialGroupList() {\r\n      this.showSpecialGroup = false;\r\n      this.currentStudentId = null;\r\n    },\r\n    showEmergencyList(studentId) {\r\n      this.currentStudentId = studentId;\r\n      this.showEmergency = true;\r\n    },\r\n    resetEmergencyList() {\r\n      this.showEmergency = false;\r\n      this.currentStudentId = null;\r\n    },\r\n    showWorkStudyList(studentId) {\r\n    this.currentStudentId = studentId;\r\n    this.showWorkStudy = true;\r\n    },\r\n    resetWorkStudyList() {\r\n      this.showWorkStudy = false;\r\n      this.currentStudentId = null;\r\n    },\r\n    printStudentList() {\r\n      this.isPrinting = true;\r\n      this.$nextTick(() => {\r\n          window.print();\r\n          this.isPrinting = false; // 打印完成后重置\r\n      });\r\n    },\r\n    async exportStudentData() {\r\n      try {\r\n        const response = await axios.get('http://localhost:8080/student/export', {\r\n          responseType: 'blob', // 重要：指定响应类型为 blob\r\n        });\r\n\r\n        // 从响应头中获取文件名 (后端需要设置 Content-Disposition 头)\r\n        const disposition = response.headers['content-disposition'];\r\n        let filename = 'student_data.xlsx'; // 默认文件名\r\n        if (disposition) {\r\n          const filenameRegex = /filename[^;=\\n]*=((['\"]).*?\\2|[^;\\n]*)/;\r\n          const matches = filenameRegex.exec(disposition);\r\n          if (matches != null && matches[1]) {\r\n            filename = matches[1].replace(/['\"]/g, '');\r\n          }\r\n        }\r\n\r\n        // 创建一个 Blob URL 并触发下载\r\n        const url = window.URL.createObjectURL(new Blob([response.data]));\r\n        const link = document.createElement('a');\r\n        link.href = url;\r\n        link.setAttribute('download', filename);\r\n        document.body.appendChild(link);\r\n        link.click();\r\n        document.body.removeChild(link);\r\n        window.URL.revokeObjectURL(url);\r\n      } catch (error) {\r\n        console.error('导出学生数据失败:', error);\r\n        alert('导出学生数据失败');\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\ntable {\r\nborder-collapse: collapse;\r\nwidth: 100%;\r\n}\r\n\r\nth,\r\ntd {\r\nborder: 1px solid black;\r\npadding: 8px;\r\ntext-align: left;\r\n}\r\n.list-title{\r\n  text-align: center; /* 正常情况下标题居中 */\r\n}\r\n.print-title {\r\n    text-align: left !important;\r\n  }\r\n@media print {\r\n  /* 打印样式 */\r\n  body * {\r\n    visibility: hidden;\r\n  }\r\n  #printArea,\r\n  #printArea * {\r\n    visibility: visible;\r\n  }\r\n\r\n  #printArea {\r\n    position: absolute;\r\n    left: 0;\r\n    top: 0;\r\n  }\r\n  button,\r\n  input,\r\n  .router-link-active,\r\n  nav,\r\n  .el-button {\r\n      display: none !important;\r\n  }\r\n    /* 清除浮动 */\r\n  #printArea::after {\r\n    content: \"\";\r\n    display: table;\r\n    clear: both;\r\n  }\r\n\r\n  /* 设置表格的样式 */\r\n  table {\r\n    border-collapse: collapse;\r\n    width: 100%;\r\n    table-layout: auto;\r\n    page-break-inside: auto;\r\n  }\r\n\r\n  th,\r\n  td {\r\n    border: 1px solid black;\r\n    padding: 6px; /* 适当减小 padding */\r\n    text-align: left;\r\n    word-break: normal;\r\n    page-break-inside: avoid;\r\n    font-size: 10px; /* 适当减小字体大小 */\r\n  }\r\n\r\n  th {\r\n    background-color: #f2f2f2;\r\n  }\r\n\r\n  tr, td, th {\r\n    page-break-inside: avoid;\r\n  }\r\n\r\n  thead {\r\n    display: table-header-group;\r\n  }\r\n\r\n  tfoot {\r\n    display: table-footer-group;\r\n  }\r\n\r\n  /* 设置页边距 */\r\n  @page {\r\n    size: auto;\r\n    margin: 20mm;\r\n  }\r\n}\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}